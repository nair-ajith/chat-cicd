name: Node.js Docker CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: echo "Installing dependencies"
      - name: Build
        run: echo "Building application"
      - name: Success
        run: echo "Building application successful!"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: echo "Installing test dependencies"
      - name: Run tests
        run: echo "Running unit tests"
      - name: Success
        run: echo "20/20 Unit Tests passed!"

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Install dependencies
        run: echo "Installing lint dependencies (dummy)"
      - name: Run linter
        run: echo "Running ESLint"
      - name: Success
        run: echo "Code linting passed!"

  style:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/checkout@v4
      - name: Install dependencies
        run: echo "Installing style check dependencies"
      - name: Run style check
        run: echo "Running style check for application code"
      - name: Success
        run: echo "Style check passed!"

  sast:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Run SAST Scan
        run: echo "Running SAST scan"
      - name: Run SAST Scan
        run: echo "SAST scan completed. 0 critical bugs were identified"

  docker:
    runs-on: ubuntu-latest
    needs: [test, lint, style, sast]
    environment:
      name: Development
    steps:
      - uses: actions/checkout@v4
      - name: Send Slack Notification
        if: ${{ github.event_name == 'push' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: '#devops'
          SLACK_COLOR: 'warning'
          SLACK_TITLE: 'Approval Required'
          SLACK_MESSAGE: 'A pull request was merged to the chat-cicd main brancg. Deployment to Development environment requires approval. Workflow Run ID: ${{ github.run_id }}'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Set up Docker Buildx
        run: echo "Setting up Docker Buildx"
      - name: Login to Docker Hub
        run: echo "Logging in to Docker Hub"
      - name: Build and push Docker image
        run: echo "Building and pushing Docker image"
      - name: Success
        run: echo "Docker Image published successfully!"
